name: HousingRepairsOnline.AddressIngestion

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    types: [ opened, synchronize, reopened, closed ]
    branches:
      - main

jobs:
  format:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x
      - name: Authenticate nuget
        run: dotnet nuget add source --username ${{ secrets.NUGET_AUTH_GITHUB_USERNAME }} --password ${{ secrets.NUGET_AUTH_GITHUB_TOKEN }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/City-of-Lincoln-Council/index.json"
      - name: Run dotnet format
        run: dotnet format --verify-no-changes HousingRepairsOnline.AddressIngestion.sln

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 6.0.x
      - name: Authenticate nuget
        run: dotnet nuget add source --username ${{ secrets.NUGET_AUTH_GITHUB_USERNAME }} --password ${{ secrets.NUGET_AUTH_GITHUB_TOKEN }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/City-of-Lincoln-Council/index.json"
      - name: Test
        run: dotnet test

  infrastructure:
    # if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    name: "Provision Infrastructure"
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: "./terraform"
    steps:
      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v2

      - name: Terraform check formatting
        id: fmt
        run: terraform fmt -check

      - name: Terraform Init
        id: init
        run: terraform init -backend-config="resource_group_name=${{ secrets.RESOURCE_GROUP_NAME }}" -backend-config="storage_account_name=${{ secrets.STORAGE_ACCOUNT_NAME }}" -backend-config="container_name=${{ secrets.STATE_CONTAINER_NAME }}" -backend-config="key=${{ secrets.STATE_KEY_NAME }}"
      - name: Setup tfvars
        run: |
          touch env.tfvars
          echo "location                              = \"${{ secrets.LOCATION }}\"" >> env.tfvars
          echo "resource-group                        = \"${{ secrets.RESOURCE_GROUP_NAME }}\"" >> env.tfvars
          echo "storage-account                       = \"${{ secrets.STORAGE_ACCOUNT_NAME }}\"" >> env.tfvars
          echo "storage-account-primary-access-key    = \"${{ secrets.STORAGE_ACCOUNT_PRIMARY_ACCESS_KEY }}\"" >> env.tfvars
          echo "tenant-csv-blob-path-production       = \"${{ secrets.TENANT_CSV_BLOB_PATH_PRODUCTION }}\"" >> env.tfvars
          echo "tenant-csv-blob-path-staging          = \"${{ secrets.TENANT_CSV_BLOB_PATH_STAGING }}\"" >> env.tfvars
          echo "communal-csv-blob-path-production     = \"${{ secrets.COMMUNAL_CSV_BLOB_PATH_STAGING }}\"" >> env.tfvars
          echo "communal-csv-blob-path-staging        = \"${{ secrets.COMMUNAL_CSV_BLOB_PATH_STAGING }}\"" >> env.tfvars
          echo "partition-key                         = \"${{ secrets.PARTITION_KEY }}\"" >> env.tfvars
          echo "housing-provider                      = \"${{ secrets.HOUSING_PROVIDER }}\"" >> env.tfvars
          echo "cosmos-account-name                   = \"${{ secrets.COSMOS_ACCOUNT_NAME }}\"" >> env.tfvars

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color -var-file="env.tfvars"

      - name: Terraform Apply
        id: terraform_apply
        run: terraform apply -auto-approve -var-file="env.tfvars"

  build-and-deploy:
    name: "Build and Deploy Azure function code"
    runs-on: ubuntu-latest
    needs: [infrastructure]
    steps:
      - name: 'Checkout GitHub action'
        uses: actions/checkout@v2

      - name: Setup DotNet Environment
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'

      - name: Authenticate nuget
        run: dotnet nuget add source --username ${{ secrets.NUGET_AUTH_GITHUB_USERNAME }} --password ${{ secrets.NUGET_AUTH_GITHUB_TOKEN }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/City-of-Lincoln-Council/index.json"

      - name: 'Resolve Project Dependencies Using Dotnet'
        shell: bash
        run: |
          pushd './HousingRepairsOnline.AddressIngestion'
          dotnet build --configuration Release --output ./output
          popd

      - name: 'Run Azure Staging Functions action'
        uses: Azure/functions-action@v1
        with:
          app-name: 'hro-tenant-address-ingestion'
          slot-name: 'tenant-staging'
          package: 'HousingRepairsOnline.AddressIngestion/output'
          publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE_TENANT_STAGING}}

      - name: 'Run Azure Production Functions action'
        uses: Azure/functions-action@v1
        with:
          app-name: 'hro-tenant-address-ingestion'
          package: 'HousingRepairsOnline.AddressIngestion/output'
          publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE_TENANT_PRODUCTION }}

